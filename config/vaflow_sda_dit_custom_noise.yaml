model:
  base_learning_rate: 8.0e-7
  target: worker.vaflow_sda_dit_noise.VAFlow
  params:        
    # Model setting
    ckpt_dir_image_encoder     : "/data_mount/ckpt/clip/ViT-B-16.pt"
    audiocodec_ckpt_path       : "/data_mount/ckpt/sd_audio_open/stable-audio-open-1.0/vae"
    cond_feat_dim              : 768
    latent_length              : 215
    videoclipvae_ckpt_path     : Null
    videoclipvae_config        : 
      target        : model.vae.vae_vanilla.VanillaVAE_1D
      params        :
        in_channels : 768
        latent_dim  : 64
        hidden_dims : [512, 256, 128]
        decoder_with_mid : False
    ckpt_dir_audio_dit         : Null
    vaflow_ckpt_path           : Null
    vaflow_custom              : True
    vaflow_custom_config       : 
      target        : model.stable_audio.stable_audio_transformer.StableAudioDiTModel
      params        :
        attention_head_dim: 64            # default: 64
        cross_attention_dim: 768          # default: 768
        cross_attention_input_dim: 768    # default: 768
        in_channels: 64                   # default: 64
        num_attention_heads: 12
        num_key_value_attention_heads: 12 # default: 12
        num_layers: 12
        out_channels: 64                  # default: 64
        sample_size: 1024.0               # default: 1024.0
        time_proj_dim: 256                # default: 256
    ignore_keys                : []
    # Training setting
    video_interpolate_mode  : "nearest"
    lr_warmup_steps         : 2000
    use_cache_video_feat    : True     # Related to {}
    unconditional_prob      : 0.1
    scale_factor            : 1.0
    videoclipvae_tune       : True
    # Val and infer setting  
    guidance_scale          : 5.0
    sample_steps            : 25
    sample_method           : euler
    audio_sample_rate       : 44100
    # PL training setting 
    monitor           : Null
    log_data_time     : False         # False  |  True



data:
  target                : worker.base.DataModuleFromConfig
  params:
    data_name_to_cfg: 
      vggass            : ${data.vggass}
    train               : vggass
    validation          : vggass
    test                : vggass
    batch_size          : 20   # 8
    num_workers         : 20
    prefetch_factor     : 2
    persistent_workers  : False 

  audio_process:
    duration              : 10.0
    sample_rate           : 44100
  video_process:
    duration              : 10.0
    resize_input_size     : [224, 224]       # [256, 320]  |  [320, 576]
    target_sampling_rate  : 10
    raw_duration_min_threshold : 2.0

  vggass:
    meta_dir            : "/data_mount/vadio/meta/vggsound_split_withaudiosetrhythm_mp4xclipb16xibva_docker"
    train:
      target            : dataset.video.VideoDataset
      params:
        # Dataset params
        verbose             : False
        load_mode_meta      : Null
        load_mode_item      : video_feat_with_waveform     # video_frame  |  video_feat  |  video_feat_with_waveform
        meta_dir            : ${data.vggass.meta_dir}
        split               : train_vggonly     # train  |  train_speconly_ibtop_half   |  train_speconly
        # Audio video params
        audio_process_config : ${data.audio_process}
        video_process_config : ${data.video_process}
    validation:
      target            : dataset.video.VideoDataset
      params:
        # Dataset params
        verbose             : False
        load_mode_meta      : Null
        load_mode_item      : video_feat_with_waveform
        meta_dir            : ${data.vggass.meta_dir}
        split               : test_sample_3k                       # val  |  val_sample200
        # Audio video params
        audio_process_config : ${data.audio_process}
        video_process_config : ${data.video_process}
    test:
      target            : dataset.video.VideoDataset
      params:
        # Dataset params
        verbose             : False
        load_mode_meta      : Null
        load_mode_item      : video_feat_with_waveform
        meta_dir            : ${data.vggass.meta_dir}
        split               : test
        # Audio video params
        audio_process_config : ${data.audio_process}
        video_process_config : ${data.video_process}



lightning:
  logger:
    target        : pytorch_lightning.loggers.wandb.WandbLogger
    params: 
      project     : VAFlow
      group       : vaflow_framework       # debug  |  beta  |  vaflow_beta  |  vaflow  |   vaflow_framework
      name        : flownoise_sdadit_custom_small
      tags        : 
      notes       : ""
      save_code   : False

  trainer:
    strategy              : ddp       # ddp  |  ddp_find_unused_parameters_false
    max_epochs            : 500
    profiler              : Null
    auto_scale_batch_size : Null
    # precision             : ${model.params.mapper_precision}        # 16  |  32
    check_val_every_n_epoch : 5   # 1  |  5  |  10  | Null
    # val_check_interval      : 2000
    limit_val_batches       : 1.0
    limit_train_batches     : 1.0
    num_sanity_val_steps    : 1   # 0
    log_every_n_steps       : 50
    accumulate_grad_batches : 1
    detect_anomaly          : False

  callbacks:
    learning_rate_logger:
      target              : pytorch_lightning.callbacks.LearningRateMonitor
      params:
        logging_interval  : "step"
        log_momentum      : False

    modelcheckpoint:
      target              : pytorch_lightning.callbacks.ModelCheckpoint
      params: 
        filename          : "{epoch:04}-{step:.2e}"
        verbose           : True
        save_last         : True
        # For save num and monitor:
        save_top_k        : -1    # 0 for no save, -1 for save all, n for save top n, default: 1 (last one with no monitor)
        monitor           : Null
        mode              : "min"
        # For every_n_epochs:
        # Note: must work with setting trainer: max_epochs=N, check_val_every_n_epoch=M, save_on_train_epoch_end=False
        every_n_epochs    : 5     # 1  |  5  |  10  | Null
        # every_n_train_steps : 2000    # 1000  |  2000  |  5000  |  Null
        save_on_train_epoch_end : False



platform:
  matmul_precision  : medium      # medium  |  high
